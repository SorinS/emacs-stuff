#    -*- mode: org -*-


Archived entries from file c:/Documents and Settings/danny.woods/Emacs/elisp/org-files/work.org

* DONE Ethernet API						       :ARCHIVE:
  CLOSED: [2008-10-30 Thu 14:47]
  :CLOCK:
  CLOCK: [2008-10-28 Tue 10:53]--[2008-10-28 Tue 14:14] =>  3:21
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
  Gordon's modified the Ethernet API for the MicroController to use sysfs rather than probing the system with ioctls, as the former is more reliable for detecting whether or not the ethernet cable is plugged in.
** DONE Merge the code from Gordon's changes.
   CLOSED: [2008-10-28 Tue 14:13]
   - Platform vs. Microcontroller
     - Platform - The API provides a means to manipulate DHCP, set up the default gateway, etc.  It could be argued that this is pretty specific.
     - MicroController - These features are not really useful beyond the MicroController on the BlackFin
** DONE Test.
   CLOSED: [2008-10-29 Wed 16:36]
   CLOCK: [2008-10-29 Wed 13:25]--[2008-10-29 Wed 16:27] =>  3:02
   [2008-10-29 Wed 12:46] - testing.  Crashing Linux on the board.
   - Remotely debugging with GDB
     |----------------------------------+-----------------------------------------------------|
     | board                            | client                                              |
     |----------------------------------+-----------------------------------------------------|
     | gdbserver :999 ./MicroController |                                                     |
     |                                  | bfin-linux-uclibc-gdb -x gdb-init ./MicroController |
     |                                  | [issue gdb commands]                                |
     |----------------------------------+-----------------------------------------------------|

     - Not working too well: GDB not stopping; the fault appears to be getting triggered in the kernel.
       
       
   - Problem discovered in the serial manager code: listeners should be 'Pop'ed (new method) from the list, not 'Remove'd: the remove also deletes the object, which isn't good if it's shared.
 - Plug/unplug events of the ethernet are detected and logged, but it's more frantic than it should be in attempting to reconnect: some way of detecting whether or not the ethernet cable is plugged in is required.  This is NOT the same as up/down status, as the link may be in the 'down' state with the cable plugged in.  The difference is significant: when assigned a static IP address, 'ifconfig eth0 up' will cause the status of the link to change to 'up' even if there is no cable connected.  It will then immediately shift to 'down'.  The event generated by this causes the controller to attempt to setup the connection when it gets the 'up', which fails, brings the connection down, and then tries the 'up' again, which generates a false 'up' event, etc.
   
** DONE Physical ethernet connectivity interface
   CLOSED: [2008-10-30 Thu 12:07]
   :CLO
   CLOCK: [2008-10-30 Thu 09:15]--[2008-10-30 Thu 12:07] =>  2:52
   CLOCK: [2008-10-29 Wed 16:37]--[2008-10-29 Wed 17:33] =>  0:56
   :END:
   /usr/include/linux/mii.h appears to have some useful stuff.
   MII_BMSR -> 1
   blackfin kernel doesn't have SIOCGMIIREG, which is needed to fill the 'struct mii_data' that contains the connected/disconnected status.
   /sys/class/net/eth0/carrier is set to 1 when the line is connected, but only when the interface is in the 'up' state (it's openable but unreadable when the interface is 'down').  This allows a distinction to be drawn between 'up' and 'up with a cable connected'.
   Committed BFuClinuxEthernetAPI.cpp as revision 5869.
   
** DONE Test [4/4]						       :ARCHIVE:
   CLOSED: [2008-10-30 Thu 14:47]
   CLOCK: [2008-10-30 Thu 13:36]--[2008-10-30 Thu 14:47] =>  1:11
   - [X] interface up, cable in
	 MicroController starts up and connects correctly.
   - [X] interface up, cable out
	 MicroController starts up and fails to connect.  Repeatedly attempts to connect at 1s intervals.  Connects successfully when the cable is plugged in.
   - [X] interface down, cable in
	 MicroController starts up and brings eth0 up.  In the time that it takes to bring the interface up, the connection attempt fails.  When it then tries to reconnect a second later, it works fine.
   - [X] interface down, cable out
	 MicroController starts and brings eth0 up.  It then attempts to reconnect at one attempt/second until the cable is inserted, at which point it successfully communicates with the server.

* DONE udev on uClibc Linux					       :ARCHIVE:
  CLOSED: [2008-10-28 Tue 14:14]
** DONE Package up instructions for deployment.
   CLOSED: [2008-10-27 Mon 11:31]
   CLOCK: [2008-10-27 Mon 10:36]--[2008-10-27 Mon 11:23] =>  0:47
   - no fork() available
   - [[file:udev-124-no-fork.patch][patch]] required against udev 124
   - build on pundit with "CROSS_COMPILE=/opt/blackfin-uClibc-tools/linux-uclibc/bin/bfin-linux-uclibc- make"
   - udev rules file required to configure for:
     - telit modem (Vendor=1bc7 ProdID=1003)
     - gps dongle (Vendor=067b ProdID=2303)
   - mkdir -p /etc/udev/rules.d -- the udev rules files go in this directory
   - create the file /etc/udev/rules.d/50-udev.rules
     - the .rules file extension is important: udev looks for *.rules files in the 2rules directory.
     - the 50- prefix is also important: it tells udev in which order to load the rules file.  50 is normal priority
*** [[file:50-udev.rules][/etc/udev/rules.d/50-udev.rules]]
**** USB GPS
     This is the easiest device: it has a single device node, and can be matched up exactly by vendor and product ID:

     |------------------------------------------------------------------------------------------|
     | 50-udev.rules config line                                                                |
     |------------------------------------------------------------------------------------------|
     | KERNEL=="ttyUSB[0-9]", ATTRS{idProduct}=="2303", ATTRS{idVendor}=="067b", SYMLINK+="gps" |
     |------------------------------------------------------------------------------------------|

     This ensures that the device is accessible via /dev/gps when plugged in.
**** Telit Modem
     This is more troublesome, as it has three devices nodes through which different kinds of functionality are available.  Since it's physically the same device for each node, the idProduct and idVendor codes are of limited use, as they're the same for all three.
     
     |--------------------------------------------------------------------------------------|
     | 50-udev.rules config lines                                                           |
     |--------------------------------------------------------------------------------------|
     | KERNEL=="ttyUSB[0-9]", KERNELS=="*:1.0", DRIVERS=="option", SYMLINK+="telit-data"    |
     | KERNEL=="ttyUSB[0-9]", KERNELS=="*:1.1", DRIVERS=="option", SYMLINK+="telit-monitor" |
     |--------------------------------------------------------------------------------------|

     Agreed on the names of the device nodes for the telit modem with Andrew and Gordon [2008-10-27 Mon]
     
* DONE SerialManager updates					       :ARCHIVE:
  CLOSED: [2008-10-28 Tue 14:14]
** DONE Check-in patch for MicroController
   CLOSED: [2008-10-27 Mon 12:02]
   CLOCK: [2008-10-27 Mon 11:23]--[2008-10-27 Mon 12:01] =>  0:38
   MicroController currently has code that attempts to parse sense out of sysfs.  udev does a much better job of this, and should be used in preference.  Using udev also means that the code can be reduced to checking for the presence of symlinks: far simpler and less error-prone.
   - committed as changes to MC/ConsoleApp/include/Arch/Blackfin-uClinux/BFuClinuxSerialManager.h and MC/ConsoleApp/src/Arch/Blackfin-uClinux/BFuClinuxSerialManager.cpp in r5828.
** DONE Update BlackFin Serial Manager
   CLOSED: [2008-10-27 Mon 15:29] Applied into r5830.
   The BlackFin Serial Manager periodically checks for the presence or absence of devices that it is set to use (the Telit modem or the GPS dongle).  When these devices are plugged in, SerialPort instances should be automatically registered or de-registered with the manager, as appropriate.
** DONE Update Windows Serial Manager

   CLOSED: [2008-10-27 Mon 15:38] Applied into r5831.
   In line with changes made to BlackFin manager.
* CANCELLED X509 Certificates in IPsecController		       :ARCHIVE:
  CLOSED: [2008-10-29 Wed 11:14]
  Need to determine what it would take to add X509 certificates as a feature of VPN connectivity, effectively boiling down to whether or not this feature is worth having for the next release.
  Including the certificate is simple: racoon accepts a configuration parameter in its file:
  :properties:
  - At the top
    path certificate "/etc/ssl/certs"
  - In the 'remote' section
    certificate_type x509 "user@host.name.cert" "user@host.name.key.private"
    authentication_method rsasig
  - Unsure about these:
    verify_cert
    send_cert
    my_identifier
    :ARCHIVE_TIME: 2009-03-20 Fri 16:21
    :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
    :ARCHIVE_CATEGORY: work
    :ARCHIVE_TODO: CANCELLED
  :end:
  The biggest problem is testing and supporting this, not implementing it.
  * Passed this information to Tony [2008-10-29 Wed].  Current thinking is not to implement it for this release, due to concerns about testing and support.`
* DONE Update MainController.cpp with config settings		       :ARCHIVE:
  CLOSED: [2008-11-04 Tue 15:43]
  As per [[file:mark4-config.ini][mark-4 config]]
  :CLOCK:
  CLOCK: [2008-11-03 Mon 09:14]--[2008-11-03 Mon 10:30] =>  1:16
  CLOCK: [2008-10-31 Fri 10:25]--[2008-10-31 Fri 16:25] =>  6:00
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
  
|--------------------------+------------------------------------+---------------------|
| FILE                     | Config option                      | Checked in revision |
|--------------------------+------------------------------------+---------------------|
| hardware_version         | Config::hardware_model             | r5878               |
| connect_mode             | Config::connection_methods         | r5878               |
| name                     | Config::encoder_name               | r5878               |
| server                   | Config::server_address             | r5878               |
| username                 | NOT USED                           | --                  |
| password                 | Config::password                   | r5878               |
| enable_encryption        | Config::use_encryption             | r5878               |
| enable_archive           | Config::archive_recording          | r5878               |
| remote_archive_playback  | Config::archive_playback           | r5878               |
| archive_fps              | NOT USED                           | --                  |
| time_zone                | Config::time_zone                  | r5878               |
| vpn_enabled              | Config::ipsec_enabled              | r5878               |
| vpn_username             | Config::ipsec_vpn_username         | r5878               |
| remote_address           | Config::ipsec_remote_address       | r5878               |
| pre_shared_key           | Config::ipsec_pre_shared_key       | r5878               |
| vpn_keyexchange_method   | Config::ipsec_key_exchange_method  | r5881               |
| vpn_keyexchange_group    | Config::ipsec_key_exchange_group   | r5881               |
| vpn_encryption_algorithm | Config::ipsec_encryption_algorithm | r5881               |
| network_ip               | Config::ethernet_ip_address        | r5878               |
| wireless_modem_type      |                                    |                     |
| wireless_profiles        |                                    |                     |
| wireless_apn             | Config::telit_apn                  | r5878               |
| wireless_username        | Config::telit_user                 | r5878               |
| wireless_password        | Config::telit_password             | r5878               |
| wireless_ip              | Config::telit_ip_address           | r5878               |
|--------------------------+------------------------------------+---------------------|

** HOLD Check on encryption pack with Gordon (config)
   Gordon's quite busy at the moment...
   
* DONE Test rs485 interface					       :ARCHIVE:
  CLOSED: [2008-11-05 Wed 10:21]
  :CLOCK:
  CLOCK: [2008-11-04 Tue 10:31]--[2008-11-04 Tue 15:43] =>  5:12
  CLOCK: [2008-11-03 Mon 11:00]--[2008-11-03 Mon 14:30] =>  3:30
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
** RS485 Properties
   :properties:
   * data is carried by a pair of wires.
   * the difference between the voltages carried by each pair is used to determine pulses.
   * carried over twisted pair, allowing for significantly improved ranges and speeds over rs232
   * half-duplex
   :end:
** RS-485 in the Mark II
   When the port is opened, DTR (Data Terminal Ready) and RTS (Request to Send) are both raised.
   DTR indicates that the port is ready to receive data
   RTS asks the remote end for permission to transmit.
*** Mark II implementation in [[file:/home/danny/SandBox/FairyLinux/e200-scripts/serial.c][serial.c]]
    - Reads from stdin, which is connected to a Ruby process that feeds it commands.
    - Writes to the serial port (normally /dev/ttyS0).
    - RS-485 requires that the RTS line be raised before writing data, and dropped afterward.  It's otherwise the same as RS-232.
      - Line is created with RTS bit cleared
** DONE RS-485 Testing (Mark III/IV)
   SCHEDULED: <2008-11-05 Wed> -- borrow 485-enabled board from Andrew for an hour. CLOSED: [2008-11-10 Mon 09:25]
**** Physical Connectivity
    |---------------+----------+-------------------------------|
    | Physical Wire | Type     | 485 Block pin (from the left) |
    |---------------+----------+-------------------------------|
    | blue/white    | ground   | pin 1                         |
    | orange/white  | data +ve | pin 2                         |
    | orange        | data -ve | pin 3                         |
    |---------------+----------+-------------------------------|
    Also terminating 120ohm resistor across data pins (2&3).
**** Software
    Wrote [[file:serial-test.c][serial-test.c]]
     - first arg should be either --read or --write
     - second arg should be the serial device to use
     - data can be sent, but the read call triggers EAGAIN unless there is data available.
     - Resources:
       http://www.linuxquestions.org/questions/programming-9/to-make-the-system-call-read-blocked-665272/
       http://www.linuxquestions.org/questions/programming-9/char-by-char-read-from-serial-port-659806/
       http://tldp.org/HOWTO/Serial-Programming-HOWTO/x115.html#AEN129
     - proposed solutions to the blocking problem:
       1. Use fcntl to set non-blocking operation: fcntl( fd, F_SETFL, fcntl(fd, F_GETFL) & ~O_NONBLOCK )
       2. man cfmakeraw
       3. set the timeout to a suitably large value: VMIN/VTIME (see [[AEN129]])
     - Strangely, only the fcntl approach works.  This does have the disadvantage of blocking on the read indefinitely, making the program difficult to terminate.
**** Test Plan [3/3]
     CLOCK: [2008-11-05 Wed 09:05]--[2008-11-05 Wed 10:21] =>  1:16
     - [X] data can be sent to blackin
     - [X] data cen be received from blackfin
     - [X] what happens when the 120ohm terminator resistor is removed?
	   Data sent fine over the short cable used (12")
* DONE Test the rs422 interface					       :ARCHIVE:
  SCHEDULED: <2008-11-05 Wed> - need that board from Andrew CLOSED: [2008-11-05 Wed 13:43]
  CLOCK: [2008-11-04 Tue 16:04]--[2008-11-04 Tue 16:45] =>  0:41
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Additional pair of wires for +ve and -ve Rx line.
** Physical Connectivity
  |---------------+--------+-------------------------------|
  | Physical Wire | Type   | 485 Block pin (from the left) |
  |---------------+--------+-------------------------------|
  | blue/white    | ground | pin 1                         |
  | orange/white  | tx +ve | pin 2                         |
  | green/white   | tx +ve | pin 3                         |
  | orange        | rc -ve | pin 5                         |
  | green         | rc -ve | pin 6                         |
  |---------------+--------+-------------------------------|
** DONE Prepare RJ45-RS422 Cable
   CLOSED: [2008-11-04 Tue 16:44]
** DONE Test Plan [3/3]
   CLOSED: [2008-11-05 Wed 13:43]
   CLOCK: [2008-11-05 Wed 10:22]--[2008-11-05 Wed 13:43] =>  3:21
   - [X] data can be sent to blackin
   - [X] data cen be received from blackfin
	 disabling 485 mode for the serial on the MarkII seems problematic...
   - [X] what happens when the 120ohm terminator resistor is removed?
	 Data sent fine over the short cable used (12")
     Works with the short cable used (~1m).
     works normally over the ~1m cable used.
* DONE SerialManager						       :ARCHIVE:
  CLOSED: [2008-11-12 Wed 13:49]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
** DONE Design SerialManager/SerialPorts
   CLOSED: [2008-11-06 Thu 17:42]
   :CLOCK:
   CLOCK: [2008-11-05 Wed 14:30]--[2008-11-05 Wed 17:30] =>  3:00
   :END:
   The serial manager code needs to be written for the MicroController.
   Much of it is actually already written...
   EV_Object <- SerialPort <- RS232Port <- BFuClinuxRS232Port
   All we're really interested in is what happens immediately after opening (422) or before and after each write (485).
   Hooks in SerialPort, with 422 and 485 subclasses?
   232, 485 and 422 are platform independent constructs: it can be argued that they belong in a platform-independent hierarchy.
   Multiple inheritance: platform-specific XXXSerialPort class, with subclasses implementing specific, spec-dependent functionality.
** DONE RS485/422 implementations
    CLOSED: [2008-11-06 Thu 17:43]
   :CLOCK:
    CLOCK: [2008-11-06 Thu 09:31]--[2008-11-06 Thu 16:36] =>  7:05
    :END:
    comitted code containing refactoring of SerialPort code for the Blackfin.  Re-jigged 232 submitted along with new classes for 485 and 422.  Andrew tested the 232 code against the Telit modem for me, and it appears to work fine.
** DONE SerialManager Integration
   CLOSED: [2008-11-07 Fri 14:33]
   :CLOCK:
   CLOCK: [2008-11-07 Fri 10:20]--[2008-11-07 Fri 14:33] =>  4:13
   :END:
   Currently, the SerialManager for the BlackFin creates SerialPort objects for the RS232 port, the Telit modem, and the GPS dongle.  The 485/422 port is unused.  The 485 and 422 port classes are separate (and should probably remain so), so how should which instance to create be determined?  This should probably be switchable at runtime, right?
   - The PTZController requests a serial port from the SerialManager based on the profile information for the camera: this is supplied externally.
   AcquireSerialPort on the blackfin serial manager treats the devices "rs232", "rs485" and "rs422" specially.  The SerialPort instance that is actually returned carries the real name of its physical device, allowing 485 and 422 to be mutually exclusive, as is required by the physical port being the same for both.
   - Committed as r5995.
** DONE RS232 H/W Flow Control
   CLOSED: [2008-11-12 Wed 13:49]
   :CLOCK:
   CLOCK: [2008-11-12 Wed 09:05]--[2008-11-12 Wed 09:32] =>  0:27
   CLOCK: [2008-11-11 Tue 09:30]--[2008-11-11 Tue 12:26] =>  2:56
   CLOCK: [2008-11-10 Mon 11:22]--[2008-11-10 Mon 17:34] =>  6:12
   :END:
   Updated firmware supplied by Gordon.
   Using the same [[serial-test.c]] program above, modified for RS232 and setting H/W flow control.
   Writing to the serial port appears to work fine.
   Reading doesn't work?
   Seems to work fine on tweaked serial-test.c, although minicom/picocom both seem to have when communicating with each other.
   Seems to be possible to get the board into a bad state, requiring a reboot in order to get back to solid serial comms again.  Haven't seen this since the last code tweak, so maybe it's not a problem.
   Have successfully operated in reading & writing at 56Kb for upwards of an hour.
   Physical connection can be interrupted and resumed without unexpected effect.
   <2008-11-11 Tue 11:00> The problem appears to be with the data sent: if the data contains a newline character, it is processed as expected.  Without this character, the receiving end will never process the data.
   Tested this hypothesis with a Mark II box hooked up to Pundit: RS232 serial comms work fine regardless of the direction of the traffic or whether the newline is there or not.  With the Mark III/IV board, the newline is required if the board is in read mode.
   This /may/ have something to do with the shell that's connected to /dev/ttyBF0 on the BlackFin: Gordon is building a new image that doesn't have this shell in order to try it out.
   The shell on ttyBF0 will *not* be in the production system (according to Gordon).
   <2008-11-11 Tue 12:26> Waiting on a new build of the firmware from Gordon.
   <2008-11-11 Tue 17:00> The test without the shell attached to the tty was no different: the characters were still not received.
   Have supplied test code and symptoms to Tony, who has forwarded them on to Ian Jeffrey.
   <2008-11-12 Wed 09:30> Ian says that the sample code works fine for him, both to and from the board.  I'm wondering if he's run the reader on the board more than once, as I've seen the reader work without the newline character on an intermittent basis.  I've replied with an email to this effect.
   <2008-11-12 Wed 11:07> Ian recommended using the 'set bootargs console=null' option to completely detach the the boot process from the console.  This appears to clean up the issues, but one remains:
      - boot the board with the 'set bootargs console=null' option
      - copy serial-test to the board, and run with './serial-test --read --device=/dev/ttyBF0 --232 --hwfc'.  It'll hang waiting for input.
      - on the PC end, run './serial-test-pc --write --device=/dev/ttyS0 --232 --hwfc'.  The writer freezes at a count of 4095, while the reader does nothing.  However, if you then interrupt the reader and restart, it will read the bytes sent--freeing up the writer--and thereafter work correctly for various combinations of stopping/starting the reader or writer.
      - <2008-11-12 Wed 12:17> confirmed that this is reproducible on the new board.  Sent an email to Ian asking for confirmation.
      - <2008-11-12 Wed 13:47> Ian has confirmed that he can replicate the fault, and recomments raising RTS when the port is opened to explicitly enable data receipt on a cold boot.  This is apparently a distinction drawn between RS232-C (which we have) and RS232-E (which specifies being able to read on open by default).  Whether or not this is a valid assertion is debatable, but his workaround certainly does the trick.
* DONE Encryption Pack Config					       :ARCHIVE:
  CLOSED: [2008-11-11 Tue 16:05]
  CLOCK: [2008-11-11 Tue 13:30]--[2008-11-11 Tue 15:24] =>  1:54
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  'Key store' object in the C microcontroller: defined in CommsLibrary/Include/Encryption/Basic/EV_BasicRSAKeyStore.h
  Code commited as r6072.
** DONE Check Windows version builds
   CLOSED: [2008-11-11 Tue 15:35]
   CLOCK: [2008-11-11 Tue 15:24]--[2008-11-11 Tue 15:35] =>  0:11
   Broken in MC/UnitTest/Src/Arch/Windows/main.cpp -- fixed and committed.
* DONE PTZ Testing						       :ARCHIVE:
  CLOSED: [2008-11-13 Thu 11:49]
  :CLOCK:
  CLOCK: [2008-11-12 Wed 14:01]
  CLOCK: [2008-11-12 Wed 13:49]--[2008-11-12 Wed 13:59] =>  0:10
  :END:
  Now that the SerialManager appears to be feature complete, the PTZ commands need to be tested.
  Physical Requirements
  :properties:
    a board with a running MicroController
    a Network Server
    a camera (Sony Visca and Canon cameras available)
    a Network Manager
    :ARCHIVE_TIME: 2009-03-20 Fri 16:21
    :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
    :ARCHIVE_CATEGORY: work
    :ARCHIVE_TODO: DONE
  :end:
  <2008-11-12 Wed 14:01> This is currently not possible, as the Network Manager/Server will not work without a video stream, which is currently unavailable.  Tony has a possible solution based on some work done a while ago; he is investigating.
  <2008-11-12 Wed 14:25> Tony has supplied a setup that appears to work, once I can understand it.
  A service called 'TVNP' routes the PTZ commands.

  | TVNP Client (Laptop) --> TVNP Server (Tony's Desktop) -->  Network Server  --> MicroController --> Camera |

  No video involved.
** DONE Connect to Tony's Server
   CLOSED: [2008-11-12 Wed 17:37]
   'ptz-test' on 'tony'
   Needs a running MicroController, from the command line: 'MicroController ptz-test tony false false'
   MicroController needs building.
   - possible to build one as a flat binary?
     - doesn't appear so.  Need to wait until Gordon's free to get a new Linux image on the new board (or to reclaim the old one)
   Flashed a new Linux.
   Had to remove the watchdog code from the MicroController, as the system was being rebooted after 20s with it in place.
** DONE Steer the Sony Visca camera
   CLOSED: [2008-11-13 Thu 11:49]
   CLOCK: [2008-11-13 Thu 09:31]--[2008-11-13 Thu 11:49] =>  2:18
   Corrected a fault with parity detection on the serial port class (PARITY_TYPE_NONE means NO parity, idiot).
   Can get a Sony Visca to move, although the level of control is limited/flaky.  In particular, it's difficult to make it stop.
   All data IS being written to the serial port.
   The possibility of the shell attached to the tty interfering with the commands remains.
   Need to boot the board into dev mode.
   'evdevmode=yes' in the boot environment is enough...
   ...or would be if /etc/rc wasn't buggy.  The code that determines dev-mode is broken:
   
   [ "$devmode" = "no" ] && devmode=`dd if=/dev/mtd0 skip=2 bs=8192 count=1 2>&1 | grep 'evdevmode=' | head -n 1 | cut -f2 -d=`
   [ "$devmode" = "no" ] && devmode=`dd if=/dev/mtd1 bs=8192 count=1 2>&1 | grep evdevmode | cut -f2 -d=`
   [ "$devmode" = "no" ] && devmode=`dd if=/dev/mtd5 bs=8192 count=1 2>&1 | grep evdevmode | cut -f2 -d=`

   In my case, the second 'dd' is what yields the 'yes', but the first test blots $devmode to being '', so the set never succeeds.
   Need Gordon to build a new image, but he's busy with the chap from A2E at the moment.
   The .DEVMODE pendrive hack doesn't work, either: the USB system hasn't initialised the device by the time the existence of /pendrive/.DEVMODE file is checked, so it can't be mounted.
   <2008-11-12 Wed 17:42> That's probably enough for today.
   <2008-11-13 Thu 11:31> Gordon built a new firmware image, correcting the /etc/rc script.  The Visca camera works fine.  The Canon required a correction to the Stop command, and also to the code that determines the panning speed.  Code checked in, and unit tests aligned with changes.

* DONE Enable camera/protocol switching on the PTZController	       :ARCHIVE:
  CLOSED: [2008-11-13 Thu 13:03]
  CLOCK: [2008-11-13 Thu 11:51]--[2008-11-13 Thu 13:03] =>  1:12
  The controller currently doesn't account for the scenario where you've just switched the camera attached to the RS232 port.
  All it sees is that there's a non-NULL object in the place that matches the address.
  Need to match on the protocols as well, and delete/recreate the slot as required.
  Unit tested clean and manually verified against Visca and Canon cameras.  Code checked in.

* DONE How to setup an IPsec gateway for testing		       :ARCHIVE:
  CLOSED: [2008-11-20 Thu 16:32]
  :CLOCK:
  CLOCK: [2008-11-20 Thu 11:34]--[2008-11-20 Thu 12:14] =>  0:40
  CLOCK: [2008-11-13 Thu 13:55]--[2008-11-13 Thu 14:19] =>  0:24
  :END:
  Host: evdemo@us.evdemo.net
  Kernel: 2.4.21-32.0.1.EL
  According to http://www.freeswan.org/freeswan_trees/freeswan-1.91/doc/install.html, NETFILTER is required in the kernel config, but it's missing.
  Two Ubuntu images running in VMWare.

  |-----------------------------------------------------------------|
  | Client (192.168.163.128)                                        |
  |-----------------------------------------------------------------|
  | Only one network interface required, IP address 192.168.163.128 |
  | [[file:client-racoon.conf][racoon.conf]] as linked                                           |
  | [[file:client-psk.txt][psk.txt]] as linked, permissions 400/root:root                    |
  | setkey configured as per [[file:setkey-config.txt][setkey-config]]                          |
  | setkey -f setkey-config                                         |
  | racoon -f racoon.config                                         |
  |-----------------------------------------------------------------|

  |---------------------------------------------------------------------------------------------|
  | Server (eth1 192.168.163.129, eth1:1 192.168.2.10)                                          |
  |---------------------------------------------------------------------------------------------|
  | Two network interfaces, as above.                                                           |
  | [[file:server-racoon.conf][racoon.conf]] as linked                                                                       |
  | [[file:client-psk.txt][psk.txt]] as linked, permissions 400/root:root                                                |
  | setkey does NOT need to be configured ("generate_policy on;" in racoon config handles this) |
  | racoon -f racoon.config                                                                     |
  | 'ping 192.168.2.10' should work                                                             |
  |---------------------------------------------------------------------------------------------|

  At this point, the private host 192.168.2.10 is behind the gateway is visible to the client 192.168.163.128, with all communications between the two encrypted.

  'racoon -f /var/racoon/racoon.conf -l racoonf.debug -ddd -v -F' is useful for printing out tons of information.
  'tcpdump -i ethX' is also very useful for seeing what's getting sent.
   
* DONE Keyboard PTZ Visca issue					       :ARCHIVE:
  CLOSED: [2008-11-21 Fri 16:40]
  :CLOCK:
  CLOCK: [2008-11-20 Thu 13:31]--[2008-11-20 Thu 14:34] =>  1:03
  :END:
  When driven from the viewer, holding down one of the directional keys should result in an initial slow speed, then an increase to medium speed.
  The sequence of commands is [move]-slow --> stop --> [move]-medium
  The Visca doesn't hit medium speed, stopping instead.
  It works as expected with the LMW camera using v6.5.0 of the viewer
  The 'stop' and 'move-medium' commands are issued immediately after each other in code, so it's entirely possible that it's a timing issue.
  Be aware, however, that these actions occur on the same thread as the video encoder, so holding up that thread with a lengthy sleep is not a good idea.
  The original Ruby implementation sleeps for three hundred(!) milliseconds: no way this can be done in the C++ version unless the PTZController runs on a separate thread.
  [2008-11-20 Thu 14:32] - Implemented something that looks sensible, but I need a board to test it against: Gordon needs mine for its JTAG interface.
  [2008-11-21 Fri 09:15] - The current implementation works for me?  Progressing with the revamped implementation isn't sensible, given that the demo is happening next week.  Definitely something to test in dev-land.
  [2008-11-21 Fri 16:39] - The 'fix' actually introduces the bug on my machine!  Have tar'd up the modified files and reverted to the repository sources.
* DONE Pelco PTZ						       :ARCHIVE:
  CLOSED: [2008-11-21 Fri 14:10]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Test presets
  [2008-11-20 Thu 16:51] - need a board
  [2008-11-21 Fri 14:10] - done.  All commands work, including multiple presets.

* DONE LMW PTZ							       :ARCHIVE:
  CLOSED: [2008-11-21 Fri 16:41]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
** DONE Wiring
   CLOSED: [2008-11-19 Wed 17:52]
   For the steering cable:
   Pin D is RS485+, E is RS485- and a 100k resister across pins C & J simulates the impedence of a controller
** BLOCKED Set/Goto Preset
   The presets on the camera that I'm using don't support pan and tilt, only zoom.  Not very useful, but still an indicator of whether or not it's working.
   Setting presets works using the hand-console.
   The codes in the manual don't appear to set the preset as expected: is the documentation accurate?
   wtf?
   [2008-11-21 Fri 16:40] - We need to test against a camera that has reasonable (i.e. not just zoom) presets.
** DONE Day/Night Mode
   CLOSED: [2008-11-19 Wed 17:53]
   Implemented and checked in
* DONE Canon PTZ						       :ARCHIVE:
  CLOSED: [2008-11-24 Mon 17:37]
  CLOCK: [2008-11-24 Mon 10:30]--[2008-11-24 Mon 17:37] =>  7:07
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  The Canon camera is unusual in that it issues responses to commands.
  These commands MUST be read before further commands are issued.  This means that the sender effectively has to block until it has read the response.
  This requires a re-working of the PTZController to operate on its own thread.  Otherwise, the delays will cause problems for the video encode thread, which issues the commands.
  Raw, EV-side PTZ commands can now be either 4 or 5 bytes, not just the 4 that was originally set.
  To avoid cluttering the code, all commands are turned into 5 byte commands before processing: if a command looks like it's 4 bytes long, the camera address from byte 3 is jammed into byte 5.
  Controller re-worked and bugs ironed out.  The controller maintains a circular buffer of 10 5-byte PTZ commands.
  Canon implementation responses debugged: the end of the responses (0xEF) wasn't being properly detected, leading to timeouts and delays.
  Presets, keyboard and navigation buttons work fine now.
  Committed as revision 6371.
* DONE Enter Test Details into TargetProcess			       :ARCHIVE:
  CLOSED: [2008-12-01 Mon 16:49]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Skeleton inserted.  Just need to flesh out the details as we go along.
* DONE Resolve Telemachis VPN issues				       :ARCHIVE:
  CLOSED: [2008-12-08 Mon 09:28]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Encoder successfully published stream via VPN.
  Successfully subscribed to stream in Control Center.
  Issue appears to be when switching down from 3G to GPRS.
  GPRS->3G switch works fine.
** REPRODUCABILITY/SCOPE
  Standard Cycle to Produce a Failure
  :properties:
  NO SOFTWARE MODIFICATIONS: uses vanilla 4.5 firmware.
  power on
  change mode from GPRS to 3G if on GPRS
  change mode from 3G to GPRS -- fail, and will not create ppp0 device again until the card is physically removed and re-inserted.  HOWEVER, once it has been re-inserted, no amount of switching between GPRS and 3G will cause the system to fail.
  :end:
  This setup works for me: I can stream video over wireless with VPN for hours without effect.
  Suspect that this has something to do with auto-switching between 3G and GPRS.  IPsec looked like a good candidate.  Manually switching using Control Center could easily reproduce the failure, almost exlusively (but not quite) when switching down from 3G to GPRS.
  Testing *without* VPN on a test server is more reliable, but forcing the switch can STILL cause the failure when the switch is repeated 4-6 times.  Not VPN-caused?

** LIKELY CAUSES
  Suspects: pppd, the wireless card, the network.
  pppd - updated to latest (not-yet released) version.  Same behaviour observed.
  wireless card - difficult for us to verify, but is the prime candidate
  network - ruled out: once the symptoms manifest, the ppp0 interface on the box itself is no longer reliable, requiring either a reboot or physically removing/re-inserting the card (the latter works even when the system proxy and encoder are both running, and is picked up automatically)
** FIRMWARE
  Current (4.5) firmware: when the problem appears, the ppp0 device cannot be brought up using pppd, and is not visible to ifconfig
  Older firmare: tried the 3.1 firmware, which produced similar (but not identical) results.  ppp0 appears, but machines cannot be reached through it.  pinging and netcat both work beforehand, but cease afterward.  Bizarrely, DNS still appears to work.
  
** FURTHER TESTS
   This behaviour can be replicated within about 10 minutes by manually forcing the switching to occur, but does the same thing happen with auto-switching?
   Tony and Robert suggest enclosing the unit in a biscuit tin (!) to force the 3G to GPRS switch.
   No biscuit tin, but the filing cabinet does a decent job.
   Minor adjustment to the Ruby script for the Option card should resolve the switch-down issues, but the pppd problem is still an unknown.
   [2008-12-05 Fri] Some frustrating testing this morning; can't get pppd to bring up ppp0 more than once for a given card-connection session.  This makes testing switching impossible.  Switching from Vodafone to Orange SIMs gave good 3G performance, but with switching completely unavailable due to a high signal strength.
** WRITE-UP
   What Telemachis see is unreliability when connected through VPN, with video available for the order of 10-15 minutes before disconnection and the stream being unavailable for a further 10 minutes or so.
   This behaviour cannot be replicated in the office: I have successfully connected to their server through their VPN gateway for upwards of an hour and a half without incident.  This experiment was manually stopped.
   The behaviour that they're seeing COULD be related to network switching, which would occur if they're running the encoder in a marginal 3G/GPRS area.  What they're seeing can be replicated by manually forcing a network switch from Control Center: it will generally (about 80% of the time) survive a switch upward from GPRS to 3G, but rarely (about 10-20% of the time) survive the downward switch.  These tests were carried out while connected through their VPN gateway.  Each network switch (whether upward or downward) involves an IP address switch and a resetting of the IPsec rules on the encoder box.
   Tried to get card-driven automatic switching to occur.  The most reliable test was to place the entire unit in a filing cabinet drawer, which largely worked when NOT connected to the VPN.  Observed numerous switches in either direction using this approach, eventually concluding the test after about 8-10 switches without bringing the encoder down.
   Automatic switching much more reluctant to happen when connected to the VPN.  3G signal strength reduced to 0-6% without a reported switch occurring, although the lights on the card indicated that the GPRS switch had happened.
   The underlying cause to the lack of connectivity appears to be where pppd cannot bring up the ppp0 network interface.  This has been verified by starting the pppd command executed by the system proxy by hand on a console.  This problem can be resolved by either a reboot, or by physically removing and re-inserting the card.  It will thereafter work for several cycles, but eventually succumb to the same symptoms.
   Regressed to 3.1 firmware for testing.  The only major difference here is that the ppp0 interface would generally appear, but be in an unusable state.  This could well be related to the kernel changes between 3.1 and 4.5.  In any event, the created interface is unusable.
   Upgraded pppd to the latest version from the git repository on samba.org.  No change to behaviour.
** APPLIED 'BUTTERFLY' PCMCIA OPTION CARD
   This card presents a network interface that looks much the same as a device provided by an ethernet card.  No pppd is involved.
   Multiple up/down switches between 3G and GPRS result in positive reconnects through VPN.
   [2008-12-05 Fri 15:06] This card has remained up for the past 15-20 mins.  I'll check it again before finishing up at 5/5:30.
   [2008-12-08 Mon 09:27] Left running over the weekend.  Still working Monday morning.  This pretty much definitively fingers the card/pppd.  Have agreed with Robert that this is a wrap-up of the issue.
* DONE Visca PTZ Testing					       :ARCHIVE:
  CLOSED: [2008-12-08 Mon 10:23]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  The latest commit for the Visca should allow it to be steered without issue from Control Center, even using the 'torture test' of wiggling the PTZ joystick.
  [2008-12-08 Mon 10:22] Tony carried out some testing over the weekend against the newer Visca model.  This went well apart from on two occasions: one where the camera lost the ability to tilt up (resolved by power-cycle); and another where the camera was momentarily slow to respond to commands.  Neither is viewed as particularly crushing.
* DONE Review Mark IV Documentation				       :ARCHIVE:
  CLOSED: [2008-12-09 Tue 10:58]
  CLOCK: [2008-12-09 Tue 09:22]--[2008-12-09 Tue 10:58] =>  1:36
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Picked up some minor problems.
  Suggestions:
  Linux installer, even if it's only console based
  Troubleshooting guide
  Glossary
  Links to tools (daemontools, Google Earth, etc.)
* DONE Serial Testing on the new boards [4/5]			       :ARCHIVE:
  CLOSED: [2008-12-10 Wed 12:10]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] RS232 w/o hardware flow control
  - [X] RS232 w/ hardware flow control
  - [X] RS422
  - [ ] RS485 - FAIL.  Writes successfully via 485, but cannot read.  Also breaks any serial chain it's part of.
  - [X] power
* DONE Test Day/Night Mode for the LMW on the Mark II		       :ARCHIVE:
  CLOSED: [2008-12-10 Wed 12:11]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Works fine via Control Center with a Mark II running firmware 4.6 against the camera we have available.
    
* DONE Determine setup for synchronous serial demo		       :ARCHIVE:
  CLOSED: [2008-12-17 Wed 09:39]
  CLOCK: [2008-12-16 Tue 12:22]--[2008-12-16 Tue 16:12] =>  3:50
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  According to the documentation, the card has an internal oscillator and can generate its own clock signal.
  The card can remember configuration that it's been set with between power cycles: all we effectively need is RS232 mode.
* DONE Integrate racoon into uClinux tree. 			       :ARCHIVE:
  CLOSED: [2008-12-23 Tue 17:06]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Only two fork() calls.  The first is immediately replacable with vfork(), the second will not be reached if racoon is running as root.  Simple patch.
  Checking out the source code takes significantly longer -- ended up copying Gordon's tree.  [2008-12-12 Fri 09:30] - checked out with git-svn.
** Changes Required for ipsec-tools
*** user/Makefile
    dir_$(CONFIG_USER_FLEX)            += flex
    dir_$(CONFIG_USER_IPSEC_TOOLS)     += ipsec-tools
*** config/config.in
    bool 'ipsec-tools' CONFIG_USER_IPSEC_TOOLS
    if [ "$CONFIG_USER_IPSEC_TOOLS" = "y" ]; then
      define_bool CONFIG_USER_FLEX y
      define_bool CONFIG_LIB_LIBSSL y
    fi
*** flex
    Unpack flex from http://flex.sourceforge.net/ into user/flex
    Add this [[file:flex.makefile][Makefile]] to the top-level
vi *** ipsec-tools
    Unpack ipsec-tools from http://ipsec-tools.sourceforge.net/ into user/ipsec-tools
    Add this [[file:ipsec-tools.makefile][Makefile]] to the top-level
    src/racoon/main.c: find the line 'if (daemon(0, 0) < 0) {' and comment-out that conditional: the definition for daemon isn't available.
    src/racoon/cftoken.l: add the following:
      #ifndef GLOB_TILDE
      #define GLOB_TILDE (1 << 12)
      #endif
    This is defined in GNU libc, but not in uClibc.  The substitute definition is the same as that in glob.h in GNU libc.
** Testing
   [2008-12-12 Fri 10:11] - racoon tested and working with a manual setup (see [[How to setup an IPsec gateway for testing]]).
   Now need to test with the MicroController setting up the connection.
   Setup is going to be interesting: Andrew is not sure if the server binds to all interfaces when it starts up.
   Involves four machines:

   |---+-----------------+-------------------------------------------------------------------------------------------------------|
   | 1 | 192.168.163.128 | Virtual Machine, Host-only networking.  Visible only to the host and gateway.  Server host.           |
   |---+-----------------+-------------------------------------------------------------------------------------------------------|
   | 2 |   192.168.0.183 | Hosting desktop, with routing enabled.  Can see all machines.                                         |
   |---+-----------------+-------------------------------------------------------------------------------------------------------|
   | 3 | 192.168.150.129 | Virtual Machine, NAT networking.  Visible to host and (via desktop).   IPsec gateway.                 |
   |---+-----------------+-------------------------------------------------------------------------------------------------------|
   | 4 |   192.168.0.151 | Encoder host, on same subnet as the hosting desktop.  Routing set to allow it to reach IPsec gateway. |
   |---+-----------------+-------------------------------------------------------------------------------------------------------|

   This setup provides:
   - a server host that is visible to the hosting machine and IPsec gateway, but which *cannot* reach the local network
   - an encoder host that can see the IPsec gateway, but not the server behind it.
   - an IPsec gateway that can see both the server host and the encoder.

     The server remains visible via the hosting desktop, allowing it to be configured.
     
*** Routing:

    1) route add -net 192.168.150.0/24 gw 192.168.163.1 (provides visibility of the IPsec gateway through the hosting desktop)
    2) In HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters, set EnableRouter (type REG_DWORD) to 1.
       (see http://support.microsoft.com/kb/315236). Reboot.
    3) route add -net 192.168.163.0/24 gw 192.168.150.1 (provides visibility of the server VM through the hosting desktop)
       route add -net 192.169.0.0/24 gw 192.168.150.1 (provides visibility of the hosting network)
    4) route add -net 192.168.50.0/24 gw 192.168.0.183 (provides visibility of the IPsec gateway)
  
** Checked in [2008-12-23 Tue]
** Tweaking
   Still not quite right: a fresh build appears to have trouble speaking to the server.  The tunnel is setup ok, each end is reachable from the other, but the encoder is immediately goes through a 'not available' cycle with the server.
** FIXED:  Remember to copy the DSP images into romfs/dsp_images!!!
* DONE Investigate A2E's Synchronous Serial Problems		       :ARCHIVE:
  CLOSED: [2009-01-05 Mon 15:24]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  What settings are they using?  Mike mentioned 'various settings'.
  They're now asking if we can go over and show them how it works.  Robert is resistant to the idea: they could quite easily get into the habit of asking for this whenever they have to spend more than 5 minutes looking at something.
  Most likely looks like taking a call from Mike to walk through the process on a screen-by-screen basis.
  Mike's settings are the same as mine, but he seems to be under the impression that a clock signal will be sent only when the data is being sent: I (and Robert) think that the clock signal is constantly on, regardless of data.
  Kinda stuck on this one.
* DONE VPN Testing for Mark 4.					       :ARCHIVE:
  CLOSED: [2009-01-06 Tue 11:05]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Should be able to set up a Network Server instance on an aliased interface on a Linux machine.
  Can then point an encoder on the local EV network to that gateway: should then be able to connect to the server through it.
  Not sure how to view the stream that the encoder produces?
  [2008-12-01 Mon 16:49] - Need racoon on the board
  [2008-12-23 Tue] - working, with configuration taken from the pen drive.  Still to test whether or not additional parameters (oakley group, encryption algorithm) are properly relayed.
  [2009-01-05 Mon] - All encryption algorithms work
  [2009-01-05 Mon] - racoon doesn't support all of the DH groups: only 1,2 and 5(!), the last of which doesn't appear in the RFC.
  [2009-01-05 Mon] - configurations for main and aggressive mode are considerably different.
  [2009-01-06 Tue] - Main mode configuration can be simplified by simply omitting the identifier (which uses the address by default).
  Main mode support added and tested.  Works fine.
  Committed into the trunk at r6706.
* DONE Re-work from VPN Testing [2/2]				       :ARCHIVE:
  CLOSED: [2009-01-06 Tue 11:07]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] racoon supports only DH groups 1, 2 and 5.  Groups 3 and 4 (elliptic curve) are missing from racoon.
	This need to be pushed over to Tony for addition into the configuration app.
	[2009-01-06 Tue] Pushed this over to Tony by email
  - [X] correct support for 'main' method.
* DONE Visca PTZ Issue						       :ARCHIVE:
  CLOSED: [2009-02-04 Wed 12:45]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-03-20 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  [2008-12-29 Mon] - Robert has noted that controlling the Visca from Control Center with the joystick is very sluggish (commenting that the presets work fine).
  Possible cause: the 300ms sleep in the Stop code.  Wiggling the joystick sends a number of these to the PTZController, so the overall effect would be cumulative.

* DONE Synchronous Serial					       :ARCHIVE:
  CLOSED: [2009-01-08 Thu 09:28]
** Test Harness
   Successfully configured cards using the breakout boards.
   Settings: [[file:ss-master.png][ss-master.png]] [[file:ss-slave.png][ss-slave.png]]
   Wiring: [[file:ss-wiring.png][ss-wiring.png]]
   [2009-01-07 Wed] Handed over to A2E to test against their development boards.
   Mike doesn't seem convinced that this is going to help: he wants a radio to test against, but that doesn't seem very likely.

* DONE Make Unit Tests Pass on Windows				       :ARCHIVE:
  CLOSED: [2009-02-04 Wed 12:45]
  IPsec is fine: '#ifndef WIN32' to avoid problems with vfork/execve on Windows builds.
  PTZ is more problematic thanks to the introduction of the thread on the PTZController.  The rapid setup/teardown is not dealt with very well by the code.

* DONE Redundant commands in the SerialController		       :ARCHIVE:
  CLOSED: [2009-03-16 Mon 11:03]
  The SerialController sometimes receives multiple commands of the same type in quick succession.  This eventually results in the task queue being filled up, which means that more recently scheduled messages might be blocked by duplicates of old messages.
  The excess tasks were actually being inserted due to setting the max keyframe interval.
* DONE Get Ray set up
  CLOSED: [2009-06-11 Thu 11:45]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Test the current MicroController/Control Center combination
	- Remember to set CC into pull mode for normal testing!
  - [X] Build a new firmware
  - [X] Flash onto the development board and re-test
  - [X] Configure for push mode and re-test
  - [X] Send to Ray, with instructions for:
    - [X] re-flashing an R300
    - [X] configuring the MicroController for push mode
    - [X] starting up Control Center and hooking up to the R300

* DONE Update TargetProcess

  CLOSED: [2009-03-23 Mon 10:13]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Ask Steven for help in completing the email to Ray at DSTL
  CLOSED: [2009-03-23 Mon 14:09]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - email sent by Steven [2009-03-24 Tue 17:00]
* DONE Alter the sync serial driver to allow programmatic control of RTS [2/2]
  CLOSED: [2009-03-27 Fri 10:35]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Provide ioctls for controlling RTS.
	- [X] ioctls included in driver in the Blackfin source tree in my Ubuntu VM.
	- [X] appropriate uClinux image created and flashed onto ssi board.
	- [X] Test program available in [[file:rts-test.c][rts-test.c]]
	      This raises/lowers the RTS line in 5 second intervals; plenty of time to measure it on the appropriate line.
	- [X] Measure changes to RTS line
	      Verified in WinSSD.
  - [X] integrate this into the write code
    - Writing should note the previous state of RTS before raising, so that if it was already raised it does not drop it again.
    - [X] a global flag is required so that the driver knows if it's in automatic or manual mode: raising and lowering RTS are performed in different functions, so it's impossible to handle locally.
    - [X] Introduced another flag to allow for an ioctl which detects when data has been written from the TX buffer.  This allows client software to delay dropping RTS until data is out.
* DONE Provide Brenda with sync serial hardware/cabling details.
  CLOSED: [2009-04-06 Mon 10:01]
  CLOCK: [2009-04-06 Mon 09:10]--[2009-04-06 Mon 10:01] =>  0:51
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Sent email with diagrams covering the basic setup.
* DONE Honour transmit duration field in 'start video' command.
  CLOSED: [2009-04-06 Mon 13:57]
  CLOCK: [2009-04-06 Mon 11:56]--[2009-04-06 Mon 12:35] =>  0:39
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Set video dimensions according to those specified in 'start video' command.
  CLOSED: [2009-04-06 Mon 15:22]
  CLOCK: [2009-04-06 Mon 13:57]--[2009-04-06 Mon 15:21] =>  1:24
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Enable/disable the temporal median filter
  CLOSED: [2009-04-06 Mon 15:33]
  CLOCK: [2009-04-06 Mon 15:21]--[2009-04-06 Mon 15:33] =>  0:12
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Get Ray set up
  CLOSED: [2009-06-11 Thu 11:45]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-06-11 Thu 11:46
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Test the current MicroController/Control Center combination
	- Remember to set CC into pull mode for normal testing!
  - [X] Build a new firmware
  - [X] Flash onto the development board and re-test
  - [X] Configure for push mode and re-test
  - [X] Send to Ray, with instructions for:
    - [X] re-flashing an R300
    - [X] configuring the MicroController for push mode
    - [X] starting up Control Center and hooking up to the R300
* DONE Get Dave's JavaSerialCat program to Ray			       :ARCHIVE:
  SCHEDULED: <2009-06-24 Wed>
  :CLOCK:
  CLOCK: [2009-06-24 Wed 09:10]--[2009-06-24 Wed 15:14] =>  6:04
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
* DONE Implement read caching in ByteSyncedReadStream [3/3]	       :ARCHIVE:
  SCHEDULED: <2009-06-24 Wed> CLOSED: [2009-06-24 Wed 15:15]
  :CLOCK:
  CLOCK: [2009-06-24 Wed 10:15]--[2009-06-24 Wed 15:15] =>  5:00
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
  - [X] Write Unit tests
  - [X] Code
  - [X] Integrate into ByteSyncedReadStream
* DONE Test Control Center manually				       :ARCHIVE:
  SCHEDULED: <2009-06-24 Wed> CLOSED: [2009-06-24 Wed 15:17]
  :CLOCK:
  CLOCK: [2009-06-24 Wed 13:45]--[2009-06-24 Wed 14:45] =>  1:00
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  :END:
  Tested with the PCMCIA card in pull mode, as I'm still suspicious of encoders being permanently stuck in push.
* DONE Provide Ray with updated Control Center.			       :ARCHIVE:
  SCHEDULED: <2009-06-24 Wed> CLOSED: [2009-06-24 Wed 15:18]
  CLOCK: [2009-06-24 Wed 14:45]--[2009-06-24 Wed 15:18] =>  0:33
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Build instructions from Steven.
  - [one-off] Install NSIS 2.4.0 (in \\steven\shared)
  - [one-off] Copy the Plugins folder from the \\steven\shared\NSIS into C:\Program Files\NSIS (overwriting the original Plugins folder)
  - Checkout https://evdev/svn/products/rebranding
  - Choose a sub-project (tvi_radio_viewer in this case)
  - Open a Visual Studio command prompt, and go to that directory.
  - run 'rebrand.bat' to see usage.  Normal usage would be 'rebrand.bat build 3.1.0 my-tvi-radio-viewer'
    This checks out the code from Subversion, builds it, creates the named folder ('my-tvi-radio-viewer')
    and places the installer in it.  The folder is relative to the root of the 'rebranding' project, not
    the working project.
* DONE Update Target Process					       :ARCHIVE:
  CLOSED: [2009-06-24 Wed 15:52]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  New user story and tasks added.
* DONE Fix SerialController::Halt bug				       :ARCHIVE:
  CLOSED: [2009-06-30 Tue 14:23]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-10 Fri 16:21
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  The problem could well be that the controller continues to process commands
  and tasks after being told to shutdown.  I've altered OnCommandReceived,
  ProcessTask and ProcessSelect to return immediately if invoked when
  ShouldStop is true.
  <2009-06-30 Tue 14:23> Provided an override of EV_Runnable::Stop that closes the link and forces the thread to terminate.
* DONE Fix PTZ/Serial config switch [[bug:2287]]			       :ARCHIVE:
  CLOSED: [2009-07-10 Fri 16:20]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-07-13 Mon 11:04
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  The PTZController grabs a hold of the RS232 port before the SerialController can acquire it.
  This happens because the PTZController is not a two-phase object: it's entirely built and initialised in its constructor.
  MainController::DoConfigure calls PTZController::Configure, which causes it to acquire the port.
  Several solutions:
  - Implement SerialController::Configure to allow it to acquire the serial port.
    Need to check that PTZController doesn't get upset about not being able to acquire the port.
    NEED TO BE SURE THAT THE OBJECT INITIALISATION/CONFIGURATION LIFECYCLE WORKS WITH THIS.
  - When configuring for ASI/SSI, wipe out any existing PTZ settings.
    This is a thorough, but short-sighted, fix: at some point we're going to want to being able to use PTZ presets while configured for serial video.
  - Andrew has resolved the issue: some careless (on my part) non-initialisation of the serial port object in the PTZController.  This led to a NULL
    pointer being dereferenced, with the resultant kaboom.  Resolved.
* DONE Mike Samuels call
  CLOSED: [2009-09-09 Wed 17:03]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-09-21 Mon 16:08
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
** Review light sequence code for SSI
   <2009-09-09 Wed 13:30> 
** Speak to Mike Samuels of SEMCO
   <2009-09-09 Wed 15:00>
* DONE Mike Samuels call
  CLOSED: [2009-09-09 Wed 17:03]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-09-21 Mon 16:09
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
** Review light sequence code for SSI
   <2009-09-09 Wed 13:30> 
** Speak to Mike Samuels of SEMCO
   <2009-09-09 Wed 15:00>
* DONE Apec PTZ
  CLOSED: [2009-10-15 Thu 11:26]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-10-26 Mon 09:12
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Put autofocus into the apec-1 protocol [3/3]
    - [X] Get 'autofocus off' hex string from Pawel [2/2]
	  Emailed 15-Oct-2009 @ 09:39
	  Response within 30mins.
	- [X] Unit tests
	- [X] Code
    - [X] Put autofocus into the apec-2 protocol [2/2]
        - [X] Unit tests
	- [X] Code
    - [X] Build a firmware with PTZ support
* DONE Figure out a non-hardcoded support for pluggable LED sequences
  CLOSED: [2009-10-19 Mon 09:47]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-10-26 Mon 09:12
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - avoid tinkering with the IP mode
  - provide different behaviour for 3/5 LED systems, in each of Push/Pull mode
* DONE SSI Lights [7/7]
  CLOSED: [2009-10-22 Thu 10:00]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] Camera in/out event notifications
	- [X] Unit tests
	- [X] Code
  - [X] Validate Push/Pull StateReporters and creation.
  - [X] Validate light activation sequence in SerialController [3/3]
	- [X] Push mode
	- [X] Pull mode
	- [X] Note amendments/gaps
  - [X] Build new MicroController
  - [X] Run new MC over NFS mount from dev-enabled R300
  - [X] Test and validate.
  - [X] Re-work
* DONE Diagnostics [4/4]
  CLOSED: [2009-10-22 Thu 10:05]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - [X] IACD notifications by Dave/Gordon
  - [X] Test IACD without install (copy image to /dsp_images and restart MC)
  - [X] Build and install new firmware
  - [X] Test Diagnostics
* DONE Re-evaluate Clock Rate Determination [3/3]
  CLOSED: [2009-10-22 Thu 10:10]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - The number of interrupts fed back by the CPLD reduces when the data volume increases.
  - This makes it unsuitable for situations (e.g. diagnostics) where the link is effectively saturated (reporting a 0Hz clock)
  - One approach: the clock between raising RTS and allowing data to be sent is unreliable (350ms settle time for the 117), but it's
    *still there*.  Re-calibrate the measured clock rate every time RTS is raised.
  - [X] Implement driver changes in a non-intrusive way that doesn't prevent the firmware from being reverted.
  - [X] Test & debug.
  - [X] Make the changes to the SerialController required to make use of this information.
* DONE Test Diagnostics [2/2]
  CLOSED: [2009-10-26 Mon 09:12]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  Initially not working.
  Pull is interesting: the request for new video is not sent in diagnostics mode, so Radio Viewer won't issue the return request for more data.
  Minor changes to Radio Viewer to account for push mode.
  - [X] Implement changes for push mode and test
  - [X] Implement changes for pull mode and test


TODOs:
* DONE Fix the unit tests for the MicroController and CommsLibrary projects.
  CLOSED: [2009-11-02 Mon 09:59]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Determine light sequence for 3-light C200 in async serial push/pull modes.  Implement and test.
  CLOSED: [2009-11-02 Mon 09:59]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
* DONE Improve diagnostics mode to obey time-slicing and push/pull semantics.
  CLOSED: [2009-11-02 Mon 09:59]
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-02 Mon 09:59
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :ARCHIVE_TODO: DONE
  :END:
  - transmission time would have to be passed to the SyncSerialLink from the SerialController.
  - pull mode diagnostics would have to fit into the video sending side of things.
* CANCELLED BLACKBERRY VIEWER PROJECT
  :PROPERTIES:
  :ARCHIVE_TIME: 2009-11-18 Wed 09:50
  :ARCHIVE_FILE: ~/Emacs/elisp/org-files/work.org
  :ARCHIVE_CATEGORY: work
  :END:
** V4 Codec on BlackBerry
   Identify any complications of putting the V4 codec in a BlackBerry project.
   The V4 codec can be taken from the JavaViewer project (https://evdev/svn/products/JavaViewer/trunk/)
** Loading a test clip into the application
** Benchmarking the codec
** Efficiently drawing an image on the Blackberry UI
** Efficiently changing the data backing an image
   Something akin to the old Java ImageObserver/ImageProducer scenario in Java 1, or a similar construct.
** Bechhmarking colour conversion
** Skeletal UI
** Importing the jspeex codec
** Benchmarking jspeex
** IP connectivity
   TCP and UDP IP sockets.




























































